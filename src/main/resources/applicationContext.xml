<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">

	<import resource="applicationContextProperties.xml"/>

    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="true" />
				<property name="generateDdl" value="true" />
				<property name="databasePlatform" value="org.hibernate.dialect.HSQLDialect" />
			</bean>
		</property>
	</bean>
  
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"><value>${db.driver.classname}</value></property>
        <property name="url"><value>${db.url}</value></property>
        <property name="username"><value>${db.username}</value></property>
        <property name="password"><value>${db.password}</value></property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" />

	<!-- Services Locator -->
    <bean id="serviceLocator" scope="singleton" class="net.dromard.movies.service.ServiceLocator">
        <property name="movieService" ref="movieService" />
        <property name="movieNationalityService" ref="movieNationalityService" />
        <property name="movieGenreService" ref="movieGenreService" />
        <property name="movieQualityService" ref="movieQualityService" />
        <property name="movieVersionService" ref="movieVersionService" />
        <property name="movieFormatService" ref="movieFormatService" />
        <property name="castingService" ref="castingService" />
    </bean>

	<!-- Services -->
    <bean id="movieService" class="net.dromard.movies.service.DefaultMovieService">
        <property name="serviceLocator" ref="serviceLocator" />
    </bean>
    <bean id="castingService" class="net.dromard.movies.service.DefaultCastingService"/>
    <bean id="movieNationalityService" class="net.dromard.movies.service.DefaultMovieNationalityService"/>
    <bean id="movieGenreService" class="net.dromard.movies.service.DefaultMovieGenreService"/>
    <bean id="movieQualityService" class="net.dromard.movies.service.DefaultMovieQualityService"/>
    <bean id="movieVersionService" class="net.dromard.movies.service.DefaultMovieVersionService"/>
    <bean id="movieFormatService" class="net.dromard.movies.service.DefaultMovieFormatService"/>

    <bean id="listMoviesAction" scope="prototype"  class="net.dromard.movies.web.action.ListMoviesAction">
        <constructor-arg ref="movieService" />
    </bean>
    <bean id="editMovieAction" scope="prototype"  class="net.dromard.movies.web.action.EditMovieAction">
        <constructor-arg ref="movieService" />
    </bean>
    <bean id="updateMovieAction" scope="prototype"  class="net.dromard.movies.web.action.UpdateMovieAction">
        <constructor-arg ref="movieService" />
    </bean>
    <bean id="deleteMovieAction" scope="prototype"  class="net.dromard.movies.web.action.DeleteMovieAction">
        <constructor-arg ref="movieService" />
    </bean>
</beans>

